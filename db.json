{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/assets/riven.png","path":"assets/riven.png","modified":0,"renderable":0},{"_id":"themes/yilia2/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia2/source/riven.png","path":"riven.png","modified":0,"renderable":1},{"_id":"themes/yilia2/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/yilia2/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia2/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/yilia2/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia2/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia2/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia2/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia2/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia2/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia2/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia2/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia2/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"cc75fbdb977a72e3c33a32b977ec965c1597d5c5","modified":1534487063000},{"_id":"themes/yilia2/_config.yml","hash":"f27bda802556580a246712f12cbd8378a009137c","modified":1534491027000},{"_id":"themes/yilia2/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1533188714000},{"_id":"themes/yilia2/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1533188714000},{"_id":"source/_posts/Hexo+GithubPages搭建博客.md","hash":"eb4105b0f292f7aa3b3674ee7a5b6c1b3d28a401","modified":1534500406000},{"_id":"source/_posts/排序算法.md","hash":"aa7e0bfdd2a03c1916768581902db57abf81ac0d","modified":1534500415000},{"_id":"source/assets/riven.png","hash":"9564bc357133b3c562ffe80a4c2f51610b2f137b","modified":1533262012000},{"_id":"themes/yilia2/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1533188714000},{"_id":"themes/yilia2/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1533188714000},{"_id":"themes/yilia2/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1533188714000},{"_id":"themes/yilia2/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1533188714000},{"_id":"themes/yilia2/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1533188714000},{"_id":"themes/yilia2/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1533188714000},{"_id":"themes/yilia2/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1533188714000},{"_id":"themes/yilia2/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1533188714000},{"_id":"themes/yilia2/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1533188714000},{"_id":"themes/yilia2/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1533188714000},{"_id":"themes/yilia2/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1533188714000},{"_id":"themes/yilia2/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1533188714000},{"_id":"themes/yilia2/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1533188714000},{"_id":"themes/yilia2/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1533188714000},{"_id":"themes/yilia2/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1533188714000},{"_id":"themes/yilia2/source/riven.png","hash":"9564bc357133b3c562ffe80a4c2f51610b2f137b","modified":1533188714000},{"_id":"themes/yilia2/source/.DS_Store","hash":"8e2df1a9a9f49abd2ba6bcfd38f350355d184b4a","modified":1533188714000},{"_id":"themes/yilia2/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1533188714000},{"_id":"themes/yilia2/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1533188714000},{"_id":"themes/yilia2/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533188714000},{"_id":"themes/yilia2/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1533188714000},{"_id":"themes/yilia2/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1533188714000},{"_id":"themes/yilia2/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1533188714000},{"_id":"themes/yilia2/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1533188714000},{"_id":"themes/yilia2/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1533188714000},{"_id":"themes/yilia2/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1533188714000},{"_id":"themes/yilia2/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1533188714000},{"_id":"themes/yilia2/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1533188714000},{"_id":"themes/yilia2/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1533188714000},{"_id":"themes/yilia2/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1533188714000},{"_id":"themes/yilia2/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1533188714000},{"_id":"themes/yilia2/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1533188714000},{"_id":"themes/yilia2/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1533188714000},{"_id":"themes/yilia2/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1533188714000},{"_id":"public/content.json","hash":"52d11eaa53b4d0c1462a45454a29ae150f3e80ed","modified":1534500477060},{"_id":"public/2018/08/02/Hexo+GithubPages搭建博客/index.html","hash":"cafaee3b2d11708e2484424169d1342b53c61ccc","modified":1534500477133},{"_id":"public/index.html","hash":"dccf19080717db7b5dd9b2401e66edba9d37b977","modified":1534500477158},{"_id":"public/archives/index.html","hash":"9db1bb18a14b66e6afc2ef2c465f59ba61b340e5","modified":1534500477162},{"_id":"public/archives/2018/index.html","hash":"0244c5e4c2b1622086293d2a0311fc7cb9c4fe86","modified":1534500477162},{"_id":"public/archives/2018/08/index.html","hash":"e6e78048262f582ae9dbefbcae49156965f2aa0e","modified":1534500477163},{"_id":"public/tags/notes/index.html","hash":"d19ed5812d7e20cc7efae130de3752715c9651f4","modified":1534500477163},{"_id":"public/tags/Github-Pages/index.html","hash":"9ddd23757b3575cd9d6f57996a857b1197f5f707","modified":1534500477163},{"_id":"public/tags/Hexo/index.html","hash":"2a796ead6102696b5239d012e33da0162964ea08","modified":1534500477163},{"_id":"public/2018/08/17/排序算法/index.html","hash":"15301ce3d3af607b355889aa5e58cc52a5f9bee8","modified":1534500477166},{"_id":"public/tags/coding/index.html","hash":"0dacb5c2e98b7b98281b911e082e5abaea09cdb9","modified":1534500477167},{"_id":"public/tags/Java/index.html","hash":"2241fc5d605037a4c6918c0eae2479a9f7d2398f","modified":1534500477167},{"_id":"public/tags/Python/index.html","hash":"c84834b849fc5146f4ef4fd55fa07ba1ff194ba2","modified":1534500477167},{"_id":"public/tags/排序算法/index.html","hash":"2c10016daf3a2345eac8cd646b7d3510425f7d89","modified":1534500477167},{"_id":"public/assets/riven.png","hash":"9564bc357133b3c562ffe80a4c2f51610b2f137b","modified":1534500477171},{"_id":"public/riven.png","hash":"9564bc357133b3c562ffe80a4c2f51610b2f137b","modified":1534500477171},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1534500477171},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1534500477171},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1534500477171},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1534500477171},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1534500477171},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1534500477171},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1534500477172},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1534500477172},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1534500477172},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1534500477178},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1534500477207},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1534500477207},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1534500477207}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hexo+GithubPages搭建博客","date":"2018-08-02T13:17:37.000Z","_content":"​\t本博客搭建流程，Ctrl CV 就能拥有 。。。\n\n<!--more-->\n\n#  一、安装Node.js、Hexo\n\n​\tUbuntu、Mac、Win下的安装都大同小异\n\n```bash\n$ sudo apt-get install node.js\n$ sudo apt-get install npm   #一种包管理工具\n$ sudo npm install -g hexo\n\n$ node -v\n$ hexo -v  #输出相应的版本即安装成功\n```\n# 二、Git相关配置\n\n## 1、创建一个**username.github.io**的repository\n\n## 2、配置ssh key\n\n- 打开bash\n\n```bash\n$ ssh-keygen -t rsa -C \"xxxx@xx.xx\" \n# 一路回车\n```\n\n- 打开用户目录下的*~/.ssh/*目录，目录下文件id_rsa为私钥，id_rsa.pub为公钥。复制id_rsa.pub里面的内容\n- 打开Github->Settings->SSH and GPG keys->new SSH key，取好别名，粘贴秘钥，回到bash\n\n```bash\n$ ssh -T git@github.com    #如果输出hello。。。字样，表示配置成功\n```\n\n若同一电脑需要用到多个sshkey，则还需如下操作：\n\n```bash\n$ ssh-keygen -t rsa -f ~/.ssh/id_rsa.xx -C \"xxx@xx.xx\"   #生成另外一个带别名的key\n$ ssh-add ~/.ssh/id_rsa.xx  #添加新的ssh key到ssh agent，其默认只读id_rsa\n$ touch config  #创建多个key的配置文件\n```\n\n已同时配置gitlab和github的key为例，config文件中写入如下信息\n\n```reStructuredText\nHost github\nHostName github.com\nUser git\nIdentityFile ~.ssh/id_rsa.github\n\nHost gitlab\nHostName gitlab.com\nUser git\nIdentityFile ~.ssh/id_rsa.gitlab\n```\n\n编写完成后同样可以如前所述 *“ssh -T xxx”* 检查是否配置成功\n\n## 3、Git常规配置\n\n```bash\n$ git config --list     #查看config信息\n$ git config --global user.name \"xxx\"    \n$ git config --global user.email \"xxx@xxx.xx\"\n```\n\n如果须有某个文件夹下单独配置，--global改为--local即可\n\n# 三、搭建博客开启写作之旅\n\n### 搭建流程\n\n​\tHexo搭建博客后部署到Github，如果我们需要把我们原始文件也存到Github便于我们后续在不同电脑更改，理论上我们需要一个库部署，一个库来存储我们的原始文件。这里我们通过建立不同的分支来实现。\n\n```bash\n$ git clone git@github.com:xxx/xxx.github.io.git\n$ git branch hexo\n$ git checkout hexo\n```\n\n​\t我们可以把hexo分支设置为默认分支，打开项目的settings->Branches->Default Branch更改即可。因为后续更改只会发生在hexo分支，master分支仅起部署作用。\n\n接着，我们操作Hexo：\n\n于hexo分支下，\n\n```bash\n$ hexo init  #只有空文件夹时需要改句代码\n$ npm install hexo-deployer-git\n$ hexo g  #generate,生成静态网页\n$ hexo s  #server,本地预览http://localhost:4000/\n```\n\n博客的配置文件为_config.yml，关于部署的配置如下：\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:xxx/xxx.github.io.git\n  branch: master\n```\n\n其他配置参考注释。。\n\n重新生成部署：\n\n```bash\n$hexo clean\n$ hexo g\n$ hexo d  #deploy\n```\n\n此时，打开<https://xxx.github.io/>即可访问博客。\n\n开启写作之旅：\n\n```bash\n$ hexo n \"xxx\"  #new,命令执行后，在/source/_posts下回产生一个xxx.md文件\n```\n\n修改完后，push到hexo分支：\n\n```bash\n$ git add .\n$ git commit -m \"xxx\"\n$ git push origin hexo  #-f强行push\n```\n\n如需在其他机器写作，git clone下来即可\n\n### 坑点记录\n\n- **修改配置_config.yml文件时，记得配置项之前加空格**\n\n  比如：title: *<-这个地方必须有空格*Pamper'Blog\n\n- 当我们在多台机器上修改博客，产生修改不一致的情况时，可以强制某台机器本地同步git上的代码：\n\n```bash\n$ git fetch --all\n$ git reset --hard origin/hexo\n$ git pull\n```\n\n- 添加.gitignore忽略某些文件，如.DS_Store，.deploy_git，如果发现.gitignore没起作用，清除一下git缓存即可：\n\n```bash\n$ git rm -r --cached .\n$ git add .\n$ git commit -m \"update .gitignore\"\n$ git push origin hexo\n```\n\n # 四、主题配置\n\n​\t配置文件_config.yml中有主题配置选项theme，将心仪的主题clone到themes文件夹下，修改配置重新部署即可应用主题，主题基本配置同样主题文件夹下的 _config.yml配置。\n\n​\t本博客采用[yilia](https://github.com/litten/hexo-theme-yilia)主题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Hexo+GithubPages搭建博客.md","raw":"---\ntitle: Hexo+GithubPages搭建博客\ndate: 2018-08-02 21:17:37\ntags: [notes,Github Pages,Hexo]\n---\n​\t本博客搭建流程，Ctrl CV 就能拥有 。。。\n\n<!--more-->\n\n#  一、安装Node.js、Hexo\n\n​\tUbuntu、Mac、Win下的安装都大同小异\n\n```bash\n$ sudo apt-get install node.js\n$ sudo apt-get install npm   #一种包管理工具\n$ sudo npm install -g hexo\n\n$ node -v\n$ hexo -v  #输出相应的版本即安装成功\n```\n# 二、Git相关配置\n\n## 1、创建一个**username.github.io**的repository\n\n## 2、配置ssh key\n\n- 打开bash\n\n```bash\n$ ssh-keygen -t rsa -C \"xxxx@xx.xx\" \n# 一路回车\n```\n\n- 打开用户目录下的*~/.ssh/*目录，目录下文件id_rsa为私钥，id_rsa.pub为公钥。复制id_rsa.pub里面的内容\n- 打开Github->Settings->SSH and GPG keys->new SSH key，取好别名，粘贴秘钥，回到bash\n\n```bash\n$ ssh -T git@github.com    #如果输出hello。。。字样，表示配置成功\n```\n\n若同一电脑需要用到多个sshkey，则还需如下操作：\n\n```bash\n$ ssh-keygen -t rsa -f ~/.ssh/id_rsa.xx -C \"xxx@xx.xx\"   #生成另外一个带别名的key\n$ ssh-add ~/.ssh/id_rsa.xx  #添加新的ssh key到ssh agent，其默认只读id_rsa\n$ touch config  #创建多个key的配置文件\n```\n\n已同时配置gitlab和github的key为例，config文件中写入如下信息\n\n```reStructuredText\nHost github\nHostName github.com\nUser git\nIdentityFile ~.ssh/id_rsa.github\n\nHost gitlab\nHostName gitlab.com\nUser git\nIdentityFile ~.ssh/id_rsa.gitlab\n```\n\n编写完成后同样可以如前所述 *“ssh -T xxx”* 检查是否配置成功\n\n## 3、Git常规配置\n\n```bash\n$ git config --list     #查看config信息\n$ git config --global user.name \"xxx\"    \n$ git config --global user.email \"xxx@xxx.xx\"\n```\n\n如果须有某个文件夹下单独配置，--global改为--local即可\n\n# 三、搭建博客开启写作之旅\n\n### 搭建流程\n\n​\tHexo搭建博客后部署到Github，如果我们需要把我们原始文件也存到Github便于我们后续在不同电脑更改，理论上我们需要一个库部署，一个库来存储我们的原始文件。这里我们通过建立不同的分支来实现。\n\n```bash\n$ git clone git@github.com:xxx/xxx.github.io.git\n$ git branch hexo\n$ git checkout hexo\n```\n\n​\t我们可以把hexo分支设置为默认分支，打开项目的settings->Branches->Default Branch更改即可。因为后续更改只会发生在hexo分支，master分支仅起部署作用。\n\n接着，我们操作Hexo：\n\n于hexo分支下，\n\n```bash\n$ hexo init  #只有空文件夹时需要改句代码\n$ npm install hexo-deployer-git\n$ hexo g  #generate,生成静态网页\n$ hexo s  #server,本地预览http://localhost:4000/\n```\n\n博客的配置文件为_config.yml，关于部署的配置如下：\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:xxx/xxx.github.io.git\n  branch: master\n```\n\n其他配置参考注释。。\n\n重新生成部署：\n\n```bash\n$hexo clean\n$ hexo g\n$ hexo d  #deploy\n```\n\n此时，打开<https://xxx.github.io/>即可访问博客。\n\n开启写作之旅：\n\n```bash\n$ hexo n \"xxx\"  #new,命令执行后，在/source/_posts下回产生一个xxx.md文件\n```\n\n修改完后，push到hexo分支：\n\n```bash\n$ git add .\n$ git commit -m \"xxx\"\n$ git push origin hexo  #-f强行push\n```\n\n如需在其他机器写作，git clone下来即可\n\n### 坑点记录\n\n- **修改配置_config.yml文件时，记得配置项之前加空格**\n\n  比如：title: *<-这个地方必须有空格*Pamper'Blog\n\n- 当我们在多台机器上修改博客，产生修改不一致的情况时，可以强制某台机器本地同步git上的代码：\n\n```bash\n$ git fetch --all\n$ git reset --hard origin/hexo\n$ git pull\n```\n\n- 添加.gitignore忽略某些文件，如.DS_Store，.deploy_git，如果发现.gitignore没起作用，清除一下git缓存即可：\n\n```bash\n$ git rm -r --cached .\n$ git add .\n$ git commit -m \"update .gitignore\"\n$ git push origin hexo\n```\n\n # 四、主题配置\n\n​\t配置文件_config.yml中有主题配置选项theme，将心仪的主题clone到themes文件夹下，修改配置重新部署即可应用主题，主题基本配置同样主题文件夹下的 _config.yml配置。\n\n​\t本博客采用[yilia](https://github.com/litten/hexo-theme-yilia)主题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Hexo+GithubPages搭建博客","published":1,"updated":"2018-08-17T10:06:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkxtypoi0000gex7c527dx9l","content":"<p>​    本博客搭建流程，Ctrl CV 就能拥有 。。。</p>\n<a id=\"more\"></a>\n<h1 id=\"一、安装Node-js、Hexo\"><a href=\"#一、安装Node-js、Hexo\" class=\"headerlink\" title=\"一、安装Node.js、Hexo\"></a>一、安装Node.js、Hexo</h1><p>​    Ubuntu、Mac、Win下的安装都大同小异</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install node.js</span><br><span class=\"line\">$ sudo apt-get install npm   <span class=\"comment\">#一种包管理工具</span></span><br><span class=\"line\">$ sudo npm install -g hexo</span><br><span class=\"line\"></span><br><span class=\"line\">$ node -v</span><br><span class=\"line\">$ hexo -v  <span class=\"comment\">#输出相应的版本即安装成功</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"二、Git相关配置\"><a href=\"#二、Git相关配置\" class=\"headerlink\" title=\"二、Git相关配置\"></a>二、Git相关配置</h1><h2 id=\"1、创建一个username-github-io的repository\"><a href=\"#1、创建一个username-github-io的repository\" class=\"headerlink\" title=\"1、创建一个username.github.io的repository\"></a>1、创建一个<strong>username.github.io</strong>的repository</h2><h2 id=\"2、配置ssh-key\"><a href=\"#2、配置ssh-key\" class=\"headerlink\" title=\"2、配置ssh key\"></a>2、配置ssh key</h2><ul>\n<li>打开bash</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">\"xxxx@xx.xx\"</span> </span><br><span class=\"line\"><span class=\"comment\"># 一路回车</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开用户目录下的<em>~/.ssh/</em>目录，目录下文件id_rsa为私钥，id_rsa.pub为公钥。复制id_rsa.pub里面的内容</li>\n<li>打开Github-&gt;Settings-&gt;SSH and GPG keys-&gt;new SSH key，取好别名，粘贴秘钥，回到bash</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com    <span class=\"comment\">#如果输出hello。。。字样，表示配置成功</span></span><br></pre></td></tr></table></figure>\n<p>若同一电脑需要用到多个sshkey，则还需如下操作：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -f ~/.ssh/id_rsa.xx -C <span class=\"string\">\"xxx@xx.xx\"</span>   <span class=\"comment\">#生成另外一个带别名的key</span></span><br><span class=\"line\">$ ssh-add ~/.ssh/id_rsa.xx  <span class=\"comment\">#添加新的ssh key到ssh agent，其默认只读id_rsa</span></span><br><span class=\"line\">$ touch config  <span class=\"comment\">#创建多个key的配置文件</span></span><br></pre></td></tr></table></figure>\n<p>已同时配置gitlab和github的key为例，config文件中写入如下信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~.ssh/id_rsa.github</span><br><span class=\"line\"></span><br><span class=\"line\">Host gitlab</span><br><span class=\"line\">HostName gitlab.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~.ssh/id_rsa.gitlab</span><br></pre></td></tr></table></figure>\n<p>编写完成后同样可以如前所述 <em>“ssh -T xxx”</em> 检查是否配置成功</p>\n<h2 id=\"3、Git常规配置\"><a href=\"#3、Git常规配置\" class=\"headerlink\" title=\"3、Git常规配置\"></a>3、Git常规配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --list     <span class=\"comment\">#查看config信息</span></span><br><span class=\"line\">$ git config --global user.name <span class=\"string\">\"xxx\"</span>    </span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"xxx@xxx.xx\"</span></span><br></pre></td></tr></table></figure>\n<p>如果须有某个文件夹下单独配置，–global改为–local即可</p>\n<h1 id=\"三、搭建博客开启写作之旅\"><a href=\"#三、搭建博客开启写作之旅\" class=\"headerlink\" title=\"三、搭建博客开启写作之旅\"></a>三、搭建博客开启写作之旅</h1><h3 id=\"搭建流程\"><a href=\"#搭建流程\" class=\"headerlink\" title=\"搭建流程\"></a>搭建流程</h3><p>​    Hexo搭建博客后部署到Github，如果我们需要把我们原始文件也存到Github便于我们后续在不同电脑更改，理论上我们需要一个库部署，一个库来存储我们的原始文件。这里我们通过建立不同的分支来实现。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@github.com:xxx/xxx.github.io.git</span><br><span class=\"line\">$ git branch hexo</span><br><span class=\"line\">$ git checkout hexo</span><br></pre></td></tr></table></figure>\n<p>​    我们可以把hexo分支设置为默认分支，打开项目的settings-&gt;Branches-&gt;Default Branch更改即可。因为后续更改只会发生在hexo分支，master分支仅起部署作用。</p>\n<p>接着，我们操作Hexo：</p>\n<p>于hexo分支下，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init  <span class=\"comment\">#只有空文件夹时需要改句代码</span></span><br><span class=\"line\">$ npm install hexo-deployer-git</span><br><span class=\"line\">$ hexo g  <span class=\"comment\">#generate,生成静态网页</span></span><br><span class=\"line\">$ hexo s  <span class=\"comment\">#server,本地预览http://localhost:4000/</span></span><br></pre></td></tr></table></figure>\n<p>博客的配置文件为_config.yml，关于部署的配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:xxx/xxx.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>其他配置参考注释。。</p>\n<p>重新生成部署：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$hexo</span> clean</span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo d  <span class=\"comment\">#deploy</span></span><br></pre></td></tr></table></figure>\n<p>此时，打开<a href=\"https://xxx.github.io/\" target=\"_blank\" rel=\"noopener\">https://xxx.github.io/</a>即可访问博客。</p>\n<p>开启写作之旅：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo n <span class=\"string\">\"xxx\"</span>  <span class=\"comment\">#new,命令执行后，在/source/_posts下回产生一个xxx.md文件</span></span><br></pre></td></tr></table></figure>\n<p>修改完后，push到hexo分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">$ git push origin hexo  <span class=\"comment\">#-f强行push</span></span><br></pre></td></tr></table></figure>\n<p>如需在其他机器写作，git clone下来即可</p>\n<h3 id=\"坑点记录\"><a href=\"#坑点记录\" class=\"headerlink\" title=\"坑点记录\"></a>坑点记录</h3><ul>\n<li><p><strong>修改配置_config.yml文件时，记得配置项之前加空格</strong></p>\n<p>比如：title: <em>&lt;-这个地方必须有空格</em>Pamper’Blog</p>\n</li>\n<li><p>当我们在多台机器上修改博客，产生修改不一致的情况时，可以强制某台机器本地同步git上的代码：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch --all</span><br><span class=\"line\">$ git reset --hard origin/hexo</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加.gitignore忽略某些文件，如.DS_Store，.deploy_git，如果发现.gitignore没起作用，清除一下git缓存即可：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rm -r --cached .</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"update .gitignore\"</span></span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n<h1 id=\"四、主题配置\"><a href=\"#四、主题配置\" class=\"headerlink\" title=\"四、主题配置\"></a>四、主题配置</h1><p>​    配置文件_config.yml中有主题配置选项theme，将心仪的主题clone到themes文件夹下，修改配置重新部署即可应用主题，主题基本配置同样主题文件夹下的 _config.yml配置。</p>\n<p>​    本博客采用<a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener\">yilia</a>主题</p>\n","site":{"data":{}},"excerpt":"<p>​    本博客搭建流程，Ctrl CV 就能拥有 。。。</p>","more":"<h1 id=\"一、安装Node-js、Hexo\"><a href=\"#一、安装Node-js、Hexo\" class=\"headerlink\" title=\"一、安装Node.js、Hexo\"></a>一、安装Node.js、Hexo</h1><p>​    Ubuntu、Mac、Win下的安装都大同小异</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install node.js</span><br><span class=\"line\">$ sudo apt-get install npm   <span class=\"comment\">#一种包管理工具</span></span><br><span class=\"line\">$ sudo npm install -g hexo</span><br><span class=\"line\"></span><br><span class=\"line\">$ node -v</span><br><span class=\"line\">$ hexo -v  <span class=\"comment\">#输出相应的版本即安装成功</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"二、Git相关配置\"><a href=\"#二、Git相关配置\" class=\"headerlink\" title=\"二、Git相关配置\"></a>二、Git相关配置</h1><h2 id=\"1、创建一个username-github-io的repository\"><a href=\"#1、创建一个username-github-io的repository\" class=\"headerlink\" title=\"1、创建一个username.github.io的repository\"></a>1、创建一个<strong>username.github.io</strong>的repository</h2><h2 id=\"2、配置ssh-key\"><a href=\"#2、配置ssh-key\" class=\"headerlink\" title=\"2、配置ssh key\"></a>2、配置ssh key</h2><ul>\n<li>打开bash</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">\"xxxx@xx.xx\"</span> </span><br><span class=\"line\"><span class=\"comment\"># 一路回车</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开用户目录下的<em>~/.ssh/</em>目录，目录下文件id_rsa为私钥，id_rsa.pub为公钥。复制id_rsa.pub里面的内容</li>\n<li>打开Github-&gt;Settings-&gt;SSH and GPG keys-&gt;new SSH key，取好别名，粘贴秘钥，回到bash</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com    <span class=\"comment\">#如果输出hello。。。字样，表示配置成功</span></span><br></pre></td></tr></table></figure>\n<p>若同一电脑需要用到多个sshkey，则还需如下操作：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -f ~/.ssh/id_rsa.xx -C <span class=\"string\">\"xxx@xx.xx\"</span>   <span class=\"comment\">#生成另外一个带别名的key</span></span><br><span class=\"line\">$ ssh-add ~/.ssh/id_rsa.xx  <span class=\"comment\">#添加新的ssh key到ssh agent，其默认只读id_rsa</span></span><br><span class=\"line\">$ touch config  <span class=\"comment\">#创建多个key的配置文件</span></span><br></pre></td></tr></table></figure>\n<p>已同时配置gitlab和github的key为例，config文件中写入如下信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~.ssh/id_rsa.github</span><br><span class=\"line\"></span><br><span class=\"line\">Host gitlab</span><br><span class=\"line\">HostName gitlab.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~.ssh/id_rsa.gitlab</span><br></pre></td></tr></table></figure>\n<p>编写完成后同样可以如前所述 <em>“ssh -T xxx”</em> 检查是否配置成功</p>\n<h2 id=\"3、Git常规配置\"><a href=\"#3、Git常规配置\" class=\"headerlink\" title=\"3、Git常规配置\"></a>3、Git常规配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --list     <span class=\"comment\">#查看config信息</span></span><br><span class=\"line\">$ git config --global user.name <span class=\"string\">\"xxx\"</span>    </span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"xxx@xxx.xx\"</span></span><br></pre></td></tr></table></figure>\n<p>如果须有某个文件夹下单独配置，–global改为–local即可</p>\n<h1 id=\"三、搭建博客开启写作之旅\"><a href=\"#三、搭建博客开启写作之旅\" class=\"headerlink\" title=\"三、搭建博客开启写作之旅\"></a>三、搭建博客开启写作之旅</h1><h3 id=\"搭建流程\"><a href=\"#搭建流程\" class=\"headerlink\" title=\"搭建流程\"></a>搭建流程</h3><p>​    Hexo搭建博客后部署到Github，如果我们需要把我们原始文件也存到Github便于我们后续在不同电脑更改，理论上我们需要一个库部署，一个库来存储我们的原始文件。这里我们通过建立不同的分支来实现。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@github.com:xxx/xxx.github.io.git</span><br><span class=\"line\">$ git branch hexo</span><br><span class=\"line\">$ git checkout hexo</span><br></pre></td></tr></table></figure>\n<p>​    我们可以把hexo分支设置为默认分支，打开项目的settings-&gt;Branches-&gt;Default Branch更改即可。因为后续更改只会发生在hexo分支，master分支仅起部署作用。</p>\n<p>接着，我们操作Hexo：</p>\n<p>于hexo分支下，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init  <span class=\"comment\">#只有空文件夹时需要改句代码</span></span><br><span class=\"line\">$ npm install hexo-deployer-git</span><br><span class=\"line\">$ hexo g  <span class=\"comment\">#generate,生成静态网页</span></span><br><span class=\"line\">$ hexo s  <span class=\"comment\">#server,本地预览http://localhost:4000/</span></span><br></pre></td></tr></table></figure>\n<p>博客的配置文件为_config.yml，关于部署的配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:xxx/xxx.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>其他配置参考注释。。</p>\n<p>重新生成部署：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$hexo</span> clean</span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo d  <span class=\"comment\">#deploy</span></span><br></pre></td></tr></table></figure>\n<p>此时，打开<a href=\"https://xxx.github.io/\" target=\"_blank\" rel=\"noopener\">https://xxx.github.io/</a>即可访问博客。</p>\n<p>开启写作之旅：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo n <span class=\"string\">\"xxx\"</span>  <span class=\"comment\">#new,命令执行后，在/source/_posts下回产生一个xxx.md文件</span></span><br></pre></td></tr></table></figure>\n<p>修改完后，push到hexo分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">$ git push origin hexo  <span class=\"comment\">#-f强行push</span></span><br></pre></td></tr></table></figure>\n<p>如需在其他机器写作，git clone下来即可</p>\n<h3 id=\"坑点记录\"><a href=\"#坑点记录\" class=\"headerlink\" title=\"坑点记录\"></a>坑点记录</h3><ul>\n<li><p><strong>修改配置_config.yml文件时，记得配置项之前加空格</strong></p>\n<p>比如：title: <em>&lt;-这个地方必须有空格</em>Pamper’Blog</p>\n</li>\n<li><p>当我们在多台机器上修改博客，产生修改不一致的情况时，可以强制某台机器本地同步git上的代码：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch --all</span><br><span class=\"line\">$ git reset --hard origin/hexo</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加.gitignore忽略某些文件，如.DS_Store，.deploy_git，如果发现.gitignore没起作用，清除一下git缓存即可：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rm -r --cached .</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"update .gitignore\"</span></span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n<h1 id=\"四、主题配置\"><a href=\"#四、主题配置\" class=\"headerlink\" title=\"四、主题配置\"></a>四、主题配置</h1><p>​    配置文件_config.yml中有主题配置选项theme，将心仪的主题clone到themes文件夹下，修改配置重新部署即可应用主题，主题基本配置同样主题文件夹下的 _config.yml配置。</p>\n<p>​    本博客采用<a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener\">yilia</a>主题</p>"},{"title":"排序算法","date":"2018-08-17T07:28:22.000Z","_content":"\n​\t在Java中，待排序的元素需要实现Comparable接口，该接口中有compareTo方法，可以用来判断两个元素的大小关系。\n\n​\t排序算法的成本主要是比较和交换的次数，一个排序算法可以定义为如下形式：\n\n```java\npublic abstract class Sort<T extends Comparable>{\n    public abstract void sort(T[] obs);\n    protected boolean less(T a,T b){return a.compareTo(b)<0;};\n    protected void swap(T[] obs,int i,int j){\n        T tmp = obs[i];\n        obs[j] = obs[i];\n        obs[i] = tmp;\n    }\n}\n```\n\n\n\n<!--more-->\n\n#### 选择排序\n\n---\n\n\n\n#### 冒泡排序\n\n---\n\n\n\n#### 插入排序\n\n---\n\n\n\n#### 希尔排序\n\n---\n\n\n\n\n\n#### 归并排序\n\n***基本思想***：将数组分成两部分，分别进行排序，然后归并起来，经典的分治思想。\n\n归并：将两个已经有序的子序列合并成一个有序序列。i，j分别为两个子序列的起始指针位置，从起始位置开始比较i ，j元素的大小。较小的元素放入辅助数组中，指针后移，当某一个子序列的指针移到末尾，另一个序列剩余元素放入子序列末尾。归并完成后，将辅助数组中的元素填入原数组。\n\n归并排序是稳定的排序，最好最坏的时间复杂度都为O(nlogn)。\n\n\n\n\n\n---\n\n\n\n#### 快速排序\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/排序算法.md","raw":"---\ntitle: 排序算法\ndate: 2018-08-17 15:28:22\ntags: [coding,Java,Python,排序算法]\n---\n\n​\t在Java中，待排序的元素需要实现Comparable接口，该接口中有compareTo方法，可以用来判断两个元素的大小关系。\n\n​\t排序算法的成本主要是比较和交换的次数，一个排序算法可以定义为如下形式：\n\n```java\npublic abstract class Sort<T extends Comparable>{\n    public abstract void sort(T[] obs);\n    protected boolean less(T a,T b){return a.compareTo(b)<0;};\n    protected void swap(T[] obs,int i,int j){\n        T tmp = obs[i];\n        obs[j] = obs[i];\n        obs[i] = tmp;\n    }\n}\n```\n\n\n\n<!--more-->\n\n#### 选择排序\n\n---\n\n\n\n#### 冒泡排序\n\n---\n\n\n\n#### 插入排序\n\n---\n\n\n\n#### 希尔排序\n\n---\n\n\n\n\n\n#### 归并排序\n\n***基本思想***：将数组分成两部分，分别进行排序，然后归并起来，经典的分治思想。\n\n归并：将两个已经有序的子序列合并成一个有序序列。i，j分别为两个子序列的起始指针位置，从起始位置开始比较i ，j元素的大小。较小的元素放入辅助数组中，指针后移，当某一个子序列的指针移到末尾，另一个序列剩余元素放入子序列末尾。归并完成后，将辅助数组中的元素填入原数组。\n\n归并排序是稳定的排序，最好最坏的时间复杂度都为O(nlogn)。\n\n\n\n\n\n---\n\n\n\n#### 快速排序\n\n\n\n\n\n\n\n\n\n\n\n","slug":"排序算法","published":1,"updated":"2018-08-17T10:06:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkxtypom0001gex7ls2thiry","content":"<p>​    在Java中，待排序的元素需要实现Comparable接口，该接口中有compareTo方法，可以用来判断两个元素的大小关系。</p>\n<p>​    排序算法的成本主要是比较和交换的次数，一个排序算法可以定义为如下形式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sort</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Comparable</span>&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(T[] obs)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> <span class=\"title\">less</span><span class=\"params\">(T a,T b)</span></span>&#123;<span class=\"keyword\">return</span> a.compareTo(b)&lt;<span class=\"number\">0</span>;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(T[] obs,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">        T tmp = obs[i];</span><br><span class=\"line\">        obs[j] = obs[i];</span><br><span class=\"line\">        obs[i] = tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h4><hr>\n<h4 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h4><hr>\n<h4 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h4><hr>\n<h4 id=\"希尔排序\"><a href=\"#希尔排序\" class=\"headerlink\" title=\"希尔排序\"></a>希尔排序</h4><hr>\n<h4 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h4><p><strong><em>基本思想</em></strong>：将数组分成两部分，分别进行排序，然后归并起来，经典的分治思想。</p>\n<p>归并：将两个已经有序的子序列合并成一个有序序列。i，j分别为两个子序列的起始指针位置，从起始位置开始比较i ，j元素的大小。较小的元素放入辅助数组中，指针后移，当某一个子序列的指针移到末尾，另一个序列剩余元素放入子序列末尾。归并完成后，将辅助数组中的元素填入原数组。</p>\n<p>归并排序是稳定的排序，最好最坏的时间复杂度都为O(nlogn)。</p>\n<hr>\n<h4 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h4>","site":{"data":{}},"excerpt":"<p>​    在Java中，待排序的元素需要实现Comparable接口，该接口中有compareTo方法，可以用来判断两个元素的大小关系。</p>\n<p>​    排序算法的成本主要是比较和交换的次数，一个排序算法可以定义为如下形式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sort</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Comparable</span>&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(T[] obs)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> <span class=\"title\">less</span><span class=\"params\">(T a,T b)</span></span>&#123;<span class=\"keyword\">return</span> a.compareTo(b)&lt;<span class=\"number\">0</span>;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(T[] obs,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">        T tmp = obs[i];</span><br><span class=\"line\">        obs[j] = obs[i];</span><br><span class=\"line\">        obs[i] = tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h4><hr>\n<h4 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h4><hr>\n<h4 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h4><hr>\n<h4 id=\"希尔排序\"><a href=\"#希尔排序\" class=\"headerlink\" title=\"希尔排序\"></a>希尔排序</h4><hr>\n<h4 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h4><p><strong><em>基本思想</em></strong>：将数组分成两部分，分别进行排序，然后归并起来，经典的分治思想。</p>\n<p>归并：将两个已经有序的子序列合并成一个有序序列。i，j分别为两个子序列的起始指针位置，从起始位置开始比较i ，j元素的大小。较小的元素放入辅助数组中，指针后移，当某一个子序列的指针移到末尾，另一个序列剩余元素放入子序列末尾。归并完成后，将辅助数组中的元素填入原数组。</p>\n<p>归并排序是稳定的排序，最好最坏的时间复杂度都为O(nlogn)。</p>\n<hr>\n<h4 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h4>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjkxtypoi0000gex7c527dx9l","tag_id":"cjkxtypoo0002gex7vcipxcf5","_id":"cjkxtypos0006gex7o2ynpvkk"},{"post_id":"cjkxtypoi0000gex7c527dx9l","tag_id":"cjkxtypor0003gex7ttnisggp","_id":"cjkxtypot0007gex7sqdu3my6"},{"post_id":"cjkxtypoi0000gex7c527dx9l","tag_id":"cjkxtypor0004gex7w25dpr85","_id":"cjkxtypot0009gex7it0qzlaf"},{"post_id":"cjkxtypom0001gex7ls2thiry","tag_id":"cjkxtypos0005gex7ts7f7063","_id":"cjkxtypov000cgex7mg1xrprm"},{"post_id":"cjkxtypom0001gex7ls2thiry","tag_id":"cjkxtypot0008gex71zlnix7b","_id":"cjkxtypow000dgex72o2t1i7a"},{"post_id":"cjkxtypom0001gex7ls2thiry","tag_id":"cjkxtypou000agex7pxdikocs","_id":"cjkxtypow000egex732tz19lm"},{"post_id":"cjkxtypom0001gex7ls2thiry","tag_id":"cjkxtypov000bgex7bu4vx4iw","_id":"cjkxtypow000fgex7faww7kad"}],"Tag":[{"name":"notes","_id":"cjkxtypoo0002gex7vcipxcf5"},{"name":"Github Pages","_id":"cjkxtypor0003gex7ttnisggp"},{"name":"Hexo","_id":"cjkxtypor0004gex7w25dpr85"},{"name":"coding","_id":"cjkxtypos0005gex7ts7f7063"},{"name":"Java","_id":"cjkxtypot0008gex71zlnix7b"},{"name":"Python","_id":"cjkxtypou000agex7pxdikocs"},{"name":"排序算法","_id":"cjkxtypov000bgex7bu4vx4iw"}]}}